name: Build & Deploy Backend Image
permissions: write-all

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'frontend/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: jonasmetzger2000/mensa-match-backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: backend/.
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build # ghcr.io/jonasmetzger2000/mensa-match-backend:main
    steps:
      - uses: actions/checkout@v3
      - name: Place SSH Key
        env:
          SSH_KEY: ${{ secrets.USERSHELL_SSH_KEY }}
        run: | 
          mkdir ~/.ssh
          echo $SSH_KEY > ~/.ssh/id_rsa
      - name: Build SSH Tunnel
        run: ssh -o StrictHostKeyChecking=no -L 1024:mensa-match.ful.informatik.haw-hamburg.de:22 infwun391@usershell.informatik.haw-hamburg.de -fN
      - name: Set Mongo User env var
        run: ssh -o StrictHostKeyChecking=no -p 1024 matcher@localhost -f 'export MONGO_ROOT_USERNAME=${{ secrets.MONGO_USER }}'
      - name: Set Mongo Password env var
        run: ssh -o StrictHostKeyChecking=no -p 1024 matcher@localhost -f 'export MONGO_ROOT_PASSWORD=${{ secrets.MONGO_PASSWORD }}'
      - name: Fetch Docker Compose
        run: ssh -o StrictHostKeyChecking=no -p 1024 matcher@localhost -f 'wget https://raw.githubusercontent.com/jonasmetzger2000/SE2-BUSC-HAW-Hamburg/main/compose.yml'